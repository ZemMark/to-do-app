{"mappings":"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","sources":["node_modules/uuid/dist/esm-browser/native.js","node_modules/uuid/dist/esm-browser/rng.js","node_modules/uuid/dist/esm-browser/stringify.js","node_modules/uuid/dist/esm-browser/v4.js","src/index.js"],"sourcesContent":["const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","import { v4 as uuidv4 } from 'uuid';\nconst getTodo = ({ id, value, checked }) => `\n  <li data-id=${id}>\n    <input type=\"checkbox\" data-action=\"checkbox\" ${checked ? 'checked' : ''} />\n    <span>${value}</span>\n    <button data-action=\"delete\">x</button>\n    <button data-action=\"view\">view</button>\n  </li>`;\nconst refs = {\n  form: document.getElementById('form'),\n  list: document.getElementById('todo-list'),\n};\nlet todos = [];\nfunction saveTasks() {\n  localStorage.setItem('todos', JSON.stringify(todos));\n}\nfunction toggleCheckboxValue(id) {\n  //map returns new old element or new, with switched value of checkbox\n  todos = todos.map(el =>\n    el.id === id\n      ? {\n          ...el,\n          checked: !el.checked, //switching value of chack box from false to true\n        }\n      : el\n  );\n  saveTasks();\n  render();\n}\nfunction loadTasksFromLocalStorage() {\n  console.log(todos);\n  try {\n    todos = JSON.parse(localStorage.getItem('todos')) || [];\n  } catch (error) {\n    console.log('error', error);\n    todos = [];\n  }\n}\nconst handleSubmit = event => {\n  const input = event.target.elements.text;\n  const value = input.value.trim();\n  if (!value) {\n    return;\n  }\n  const newTodo = { id: uuidv4(), value, checked: false };\n\n  event.preventDefault();\n  todos.push(newTodo);\n  input.value = '';\n  render();\n};\nconst deleteTodo = id => {\n  todos = todos.filter(todo => todo.id !== id);\n  render();\n};\nconst viewTodo = id => {\n  console.log('view todo');\n};\nconst handleTodoClick = event => {\n  const { action } = event.target.dataset;\n  const parent = event.target.closest('li');\n  const { id } = parent?.dataset || {};\n\n  switch (action) {\n    case 'delete':\n      deleteTodo(id);\n      break;\n\n    case 'view':\n      viewTodo(id);\n      break;\n    case 'checkbox':\n      toggleCheckboxValue(id);\n      break;\n  }\n};\n\nconst render = () => {\n  const itemList = todos.map(todo => getTodo(todo)).join('');\n\n  refs.list.innerHTML = '';\n  refs.list.insertAdjacentHTML('beforeend', itemList);\n  saveTasks();\n};\nloadTasksFromLocalStorage();\nrender();\n\nrefs.form.addEventListener('submit', handleSubmit);\nrefs.list.addEventListener('click', handleTodoClick);\n"],"names":["$5afbd4fb4df23c28$export$2e2bcd8739ae039","crypto","randomUUID","bind","$ecc82b4b4d5334a5$var$getRandomValues","$ecc82b4b4d5334a5$var$rnds8","Uint8Array","$ecc82b4b4d5334a5$export$2e2bcd8739ae039","getRandomValues","Error","$5ce84198744ccadf$var$byteToHex","i","push","toString","slice","$5ce84198744ccadf$export$8fb373d660548968","arr","offset","toLowerCase","$87befc68df50040c$export$2e2bcd8739ae039","options","buf","rnds","random","rng","$1f0dc3b9307be026$var$refs","form","document","getElementById","list","$1f0dc3b9307be026$var$todos","$1f0dc3b9307be026$var$saveTasks","localStorage","setItem","JSON","stringify","$1f0dc3b9307be026$var$render","itemList","map","todo","id","value","checked","$1f0dc3b9307be026$var$getTodo","join","innerHTML","insertAdjacentHTML","console","log","parse","getItem","error","$1f0dc3b9307be026$var$loadTasksFromLocalStorage","addEventListener","event","input","target","elements","text","trim","newTodo","preventDefault","action","dataset","parent","closest","filter","$1f0dc3b9307be026$var$deleteTodo","el","$1f0dc3b9307be026$var$toggleCheckboxValue"],"version":3,"file":"index.4f31902d.js.map"}